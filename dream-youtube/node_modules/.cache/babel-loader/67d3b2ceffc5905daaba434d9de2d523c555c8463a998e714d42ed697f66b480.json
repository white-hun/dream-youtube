{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useYoutubeApi } from \"../context/YoutubeApiContext\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VideoDetail() {\n  _s();\n  const {\n    videoId\n  } = useParams();\n  const {\n    keyword\n  } = useParams();\n  const {\n    youtube\n  } = useYoutubeApi();\n  let {\n    isLoading,\n    error,\n    data: detail\n  } = useQuery([\"detail\", keyword], () => youtube.search(keyword));\n  const videoDetail = detail === null || detail === void 0 ? void 0 : detail.find(item => item.id === videoId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: videoDetail && console.log(videoDetail)\n  }, void 0, false);\n  // return <div>{videoDetail.snippet.title}</div>;\n}\n_s(VideoDetail, \"s1lPlRxjwiWEVsu+MirSwRyYeGQ=\", false, function () {\n  return [useParams, useParams, useYoutubeApi, useQuery];\n});\n_c = VideoDetail;\nvar _c;\n$RefreshReg$(_c, \"VideoDetail\");","map":{"version":3,"names":["React","useParams","useYoutubeApi","useQuery","Fragment","_Fragment","jsxDEV","_jsxDEV","VideoDetail","_s","videoId","keyword","youtube","isLoading","error","data","detail","search","videoDetail","find","item","id","children","console","log","_c","$RefreshReg$"],"sources":["C:/Users/White/Desktop/dream-youtube/dream-youtube/src/pages/VideoDetail.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useYoutubeApi } from \"../context/YoutubeApiContext\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\n\r\nexport default function VideoDetail() {\r\n  const { videoId } = useParams();\r\n  const { keyword } = useParams();\r\n  const { youtube } = useYoutubeApi();\r\n  let {\r\n    isLoading,\r\n    error,\r\n    data: detail,\r\n  } = useQuery([\"detail\", keyword], () => youtube.search(keyword));\r\n  const videoDetail = detail?.find((item) => item.id === videoId);\r\n\r\n  return <>{videoDetail && console.log(videoDetail)}</>;\r\n  // return <div>{videoDetail.snippet.title}</div>;\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,SAASC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAQ,CAAC,GAAGT,SAAS,EAAE;EAC/B,MAAM;IAAEU;EAAQ,CAAC,GAAGV,SAAS,EAAE;EAC/B,MAAM;IAAEW;EAAQ,CAAC,GAAGV,aAAa,EAAE;EACnC,IAAI;IACFW,SAAS;IACTC,KAAK;IACLC,IAAI,EAAEC;EACR,CAAC,GAAGb,QAAQ,CAAC,CAAC,QAAQ,EAAEQ,OAAO,CAAC,EAAE,MAAMC,OAAO,CAACK,MAAM,CAACN,OAAO,CAAC,CAAC;EAChE,MAAMO,WAAW,GAAGF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKX,OAAO,CAAC;EAE/D,oBAAOH,OAAA,CAAAF,SAAA;IAAAiB,QAAA,EAAGJ,WAAW,IAAIK,OAAO,CAACC,GAAG,CAACN,WAAW;EAAC,iBAAI;EACrD;AACF;AAACT,EAAA,CAbuBD,WAAW;EAAA,QACbP,SAAS,EACTA,SAAS,EACTC,aAAa,EAK7BC,QAAQ;AAAA;AAAAsB,EAAA,GARUjB,WAAW;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}