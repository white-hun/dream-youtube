{"ast":null,"code":"import _classPrivateFieldLooseBase from \"C:/Users/White/Desktop/dream-youtube/dream-youtube/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"C:/Users/White/Desktop/dream-youtube/dream-youtube/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nimport axios from \"axios\";\n\n// export default class FakeYoutube {\n//   constructor() {}\n\n//   async search(keyword) {\n//     // <--\n//     return keyword ? this.#searchByKeyword(keyword) : this.#mostPopular();\n//   }\n\n//   async #searchByKeyword(keyword) {\n//     return axios\n//       .get(`/videos/${keyword}.json`) //\n//       .then((res) => res.data.items)\n//       .then((items) => items.map((item) => ({ ...item, id: item.id.videoId }))); // item를 낱개로 풀어서 다 그대로 쓸건데, // id를 개체로 쓰는것이 아니라 item에 있는 id내부의 videoId로 변경\n//   }\n//   async #mostPopular() {\n//     return axios\n//       .get(`/videos/popular.json`) //\n//       .then((res) => res.data.items)\n//       .then((items) => items.map((item) => ({ ...item, id: item.id.videoId })));\n//   }\n// }\n\n// class 멤버함수이면 function 작성하지 않아도 된다 -->\n\n// search할 때 keywork가 있으면 this(class안에 있는 멤버함수인) #searchByKeyword를 호출한다(keyword 전달)\n// 만약 keyword가 없다면 this에 있는 #mostPopular함수를 호출\n// #은 private함수 - class 내부적으로는 호출이 가능하나 class 외부에서는 호출할 수 없다\n\n// 외부에서는 searchByKeyword나 nostPopular상관하지 않고 그냥 search에 keyword만 전달하면된다 search(keyword)\n// 그럼 내부적으로 알아서 keyword가 있다면  searchByKeyword를 없다면 nostPuplar를 호출\n\n// -------------------------------------------------------------------------------\nvar _searchByKeyword = /*#__PURE__*/_classPrivateFieldLooseKey(\"searchByKeyword\");\nvar _mostPopular = /*#__PURE__*/_classPrivateFieldLooseKey(\"mostPopular\");\nexport default class FakeYoutube {\n  constructor() {\n    Object.defineProperty(this, _mostPopular, {\n      value: _mostPopular2\n    });\n    Object.defineProperty(this, _searchByKeyword, {\n      value: _searchByKeyword2\n    });\n  }\n  async search(keyword) {\n    return keyword ? _classPrivateFieldLooseBase(this, _searchByKeyword)[_searchByKeyword]() : _classPrivateFieldLooseBase(this, _mostPopular)[_mostPopular]();\n  }\n}\nasync function _searchByKeyword2(keyword) {\n  return axios.get(`/videos/${keyword}.json`).then(res => res.data.items).then(items => items.map(item => ({\n    ...item,\n    id: item.id.videoId\n  })));\n}\nasync function _mostPopular2() {\n  return axios.get(\"/videos/popular.json\").then(res => res.data.items).then(items => items.map(item => ({\n    ...item,\n    id: item.id.videoId\n  })));\n}","map":{"version":3,"names":["axios","_searchByKeyword","_classPrivateFieldLooseKey","_mostPopular","FakeYoutube","constructor","Object","defineProperty","value","_mostPopular2","_searchByKeyword2","search","keyword","_classPrivateFieldLooseBase","get","then","res","data","items","map","item","id","videoId"],"sources":["C:/Users/White/Desktop/dream-youtube/dream-youtube/src/api/fakeYououtube.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// export default class FakeYoutube {\r\n//   constructor() {}\r\n\r\n//   async search(keyword) {\r\n//     // <--\r\n//     return keyword ? this.#searchByKeyword(keyword) : this.#mostPopular();\r\n//   }\r\n\r\n//   async #searchByKeyword(keyword) {\r\n//     return axios\r\n//       .get(`/videos/${keyword}.json`) //\r\n//       .then((res) => res.data.items)\r\n//       .then((items) => items.map((item) => ({ ...item, id: item.id.videoId }))); // item를 낱개로 풀어서 다 그대로 쓸건데, // id를 개체로 쓰는것이 아니라 item에 있는 id내부의 videoId로 변경\r\n//   }\r\n//   async #mostPopular() {\r\n//     return axios\r\n//       .get(`/videos/popular.json`) //\r\n//       .then((res) => res.data.items)\r\n//       .then((items) => items.map((item) => ({ ...item, id: item.id.videoId })));\r\n//   }\r\n// }\r\n\r\n// class 멤버함수이면 function 작성하지 않아도 된다 -->\r\n\r\n// search할 때 keywork가 있으면 this(class안에 있는 멤버함수인) #searchByKeyword를 호출한다(keyword 전달)\r\n// 만약 keyword가 없다면 this에 있는 #mostPopular함수를 호출\r\n// #은 private함수 - class 내부적으로는 호출이 가능하나 class 외부에서는 호출할 수 없다\r\n\r\n// 외부에서는 searchByKeyword나 nostPopular상관하지 않고 그냥 search에 keyword만 전달하면된다 search(keyword)\r\n// 그럼 내부적으로 알아서 keyword가 있다면  searchByKeyword를 없다면 nostPuplar를 호출\r\n\r\n// -------------------------------------------------------------------------------\r\n\r\nexport default class FakeYoutube {\r\n  constructor() {}\r\n\r\n  async search(keyword) {\r\n    return keyword ? this.#searchByKeyword() : this.#mostPopular();\r\n  }\r\n\r\n  async #searchByKeyword(keyword) {\r\n    return axios\r\n      .get(`/videos/${keyword}.json`)\r\n      .then((res) => res.data.items)\r\n      .then((items) => items.map((item) => ({ ...item, id: item.id.videoId })));\r\n  }\r\n  async #mostPopular() {\r\n    return axios\r\n      .get(\"/videos/popular.json\")\r\n      .then((res) => res.data.items)\r\n      .then((items) => items.map((item) => ({ ...item, id: item.id.videoId })));\r\n  }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,IAAAC,gBAAA,gBAAAC,0BAAA;AAAA,IAAAC,YAAA,gBAAAD,0BAAA;AAEA,eAAe,MAAME,WAAW,CAAC;EAC/BC,WAAWA,CAAA,EAAG;IAAAC,MAAA,CAAAC,cAAA,OAAAJ,YAAA;MAAAK,KAAA,EAAAC;IAAA;IAAAH,MAAA,CAAAC,cAAA,OAAAN,gBAAA;MAAAO,KAAA,EAAAE;IAAA;EAAC;EAEf,MAAMC,MAAMA,CAACC,OAAO,EAAE;IACpB,OAAOA,OAAO,GAAAC,2BAAA,CAAG,IAAI,EAAAZ,gBAAA,EAAAA,gBAAA,MAAAY,2BAAA,CAAsB,IAAI,EAAAV,YAAA,EAAAA,YAAA,GAAe;EAChE;AAcF;AAAC,eAAAO,kBAZwBE,OAAO,EAAE;EAC9B,OAAOZ,KAAK,CACTc,GAAG,CAAE,WAAUF,OAAQ,OAAM,CAAC,CAC9BG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,CAC7BH,IAAI,CAAEG,KAAK,IAAKA,KAAK,CAACC,GAAG,CAAEC,IAAI,KAAM;IAAE,GAAGA,IAAI;IAAEC,EAAE,EAAED,IAAI,CAACC,EAAE,CAACC;EAAQ,CAAC,CAAC,CAAC,CAAC;AAC7E;AAAC,eAAAb,cAAA,EACoB;EACnB,OAAOT,KAAK,CACTc,GAAG,CAAC,sBAAsB,CAAC,CAC3BC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,CAC7BH,IAAI,CAAEG,KAAK,IAAKA,KAAK,CAACC,GAAG,CAAEC,IAAI,KAAM;IAAE,GAAGA,IAAI;IAAEC,EAAE,EAAED,IAAI,CAACC,EAAE,CAACC;EAAQ,CAAC,CAAC,CAAC,CAAC;AAC7E"},"metadata":{},"sourceType":"module","externalDependencies":[]}